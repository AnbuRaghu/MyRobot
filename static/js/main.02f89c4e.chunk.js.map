{"version":3,"sources":["Card.js","CardList.js","Scroll.js","ErrorBoundry.js","SearchBox.js","App.js","index.js"],"names":["Card","props","name","email","id","className","alt","src","CardList","robots","cardComponent","map","user","i","key","Scroll","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","SearchBox","searchField","searchChange","type","placeholder","onChange","App","onSearchChange","event","target","value","fetch","then","res","json","users","filteredRobots","filter","data","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"0LAuBeA,EAtBJ,SAACC,GAAQ,IAGVC,EAAeD,EAAfC,KAAKC,EAAUF,EAAVE,MAAMC,EAAIH,EAAJG,GACjB,OAGJ,yBAAKC,UAAU,uDAGX,yBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cAErB,6BAGI,gCAAMF,GACN,2BAAIC,MCSGK,EApBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAGPC,EAAcD,EAAOE,KAAI,SAACC,EAAKC,GACjC,OAAQ,kBAAC,EAAD,CAAMC,IAAKD,EAAGT,GAAIK,EAAOI,GAAGT,GAAIF,KAAMO,EAAOI,GAAGX,KAAKC,MAAOM,EAAOI,GAAGV,WAElF,OACI,6BAEAO,ICFQK,EAVH,SAACd,GACV,OAEI,yBAAKe,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,UAC3DlB,EAAMmB,WCcJC,E,kDAlBX,WAAYpB,GAAO,IAAD,8BACd,cAAMA,IACDqB,MAAM,CACPC,UAAS,GAHC,E,8DAMAC,EAAMC,GAC5BC,KAAKC,SAAS,CAACJ,UAAS,M,+BAIhB,OAAGG,KAAKJ,MAAMC,SACH,yDAEJG,KAAKzB,MAAMmB,a,GAfCQ,aCYZC,EAZC,SAAC,GAA6B,EAA5BC,YAA6B,IAAjBC,EAAgB,EAAhBA,aAE1B,OACI,yBAAK1B,UAAU,OAEf,2BAAOA,UAAU,gCACjB2B,KAAK,SACLC,YAAY,gBACZC,SAAUH,MCoDHI,E,kDAjDX,aAAc,IAAD,8BAET,gBAeJC,eAAe,SAACC,GACZ,EAAKV,SAAS,CAACG,YAAYO,EAAMC,OAAOC,SAfxC,EAAKjB,MAAM,CAEZb,OAAO,GACNqB,YAAY,IANH,E,gEAWO,IAAD,OACfU,MAAM,8CAA8CC,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UAClEF,MAAK,SAAAG,GAAK,OAAK,EAAKjB,SAAS,CAAClB,OAAOmC,S,+BAQjC,IAAD,OACEC,EAAenB,KAAKJ,MAAMb,OAAOqC,QAAO,SAAAC,GAC1C,OAAOA,EAAK7C,KAAK8C,cAAcC,SAAS,EAAK3B,MAAMQ,YAAYkB,kBAInE,OAA8B,IAA3BtB,KAAKJ,MAAMb,OAAOyC,OACX,wBAAI7C,UAAU,MAAd,sBAGF,yBAAKA,UAAU,MACL,wBAAIA,UAAU,MAAd,gBACA,kBAAC,EAAD,CAAW0B,aAAcL,KAAKU,iBAC9B,kBAAC,EAAD,KACI,kBAAC,EAAD,KACG,kBAAC,EAAD,CAAU3B,OAAQoC,W,GAtChCjB,aCJnBuB,IAASC,OACP,kBAAC,EAAD,MACEC,SAASC,eAAe,U","file":"static/js/main.02f89c4e.chunk.js","sourcesContent":["import React from 'react';\r\nconst Card=(props)=>{\r\n  {/*const Card=({name,email,id})=>{  we can directly  destructure on props parameter*/}\r\n\r\n    const{name,email,id}=props;{/*object destructuring*/}\r\n    return(\r\n     \r\n\r\n<div className='tc bg-light-green dib br3 pa3 ma3 grow bw2 shadow-5'>{/*this is tachyons style*/}\r\n\r\n  { /*<img src='https://robohash.org/test'/>*/} \r\n    <img alt='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n\r\n    <div>\r\n       {/*<h2> {props.name}</h2>\r\n        <p>{props.email}</p>*/}\r\n        <h2> {name}</h2>\r\n        <p>{email}</p>\r\n    </div>\r\n</div>\r\n\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport {robots} from'./robots'\r\n\r\nconst CardList=({robots})=>{\r\n\r\n\r\n    const cardComponent=robots.map((user,i) =>{// 2nd parameter in map accepts number value so we can map the index\r\n        return  <Card key={i} id={robots[i].id} name={robots[i].name}email={robots[i].email}/>\r\n    })\r\n    return(\r\n        <div>\r\n\r\n       {cardComponent}\r\n      \r\n       </div>\r\n     /* <Card id={robots[0].id} name={robots[0].name}email={robots[0].email}/>\r\n        <Card id={robots[1].id} name={robots[1].name}email={robots[1].email}/>\r\n        <Card id={robots[2].id} name={robots[2].name}email={robots[2].email}/>*/\r\n    \r\n           \r\n       \r\n    )\r\n}\r\nexport default CardList;","import React from 'react';\r\n\r\n\r\nconst Scroll=(props)=>{\r\n    return(\r\n\r\n        <div style={{overflowY:'scroll',border:'5px solid black',height:'500px'}}>\r\n            {props.children}\r\n        \r\n        </div>\r\n    );\r\n\r\n};\r\n export default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundry extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\nthis.setState({hasError:true})\r\n    }\r\n\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Ooooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React from 'react';\r\n\r\nconst SearchBox=({searchField,searchChange})=>{\r\n\r\n    return(\r\n        <div className='pa2'>\r\n\r\n        <input className='pa3 ba b--green bg-light-blue'\r\n        type='search' \r\n        placeholder='Search Robots'\r\n        onChange={searchChange}/>\r\n        </div>\r\n    )\r\n}\r\nexport default SearchBox;","import React, { Component } from 'react';\r\nimport CardList from './CardList';\r\nimport './index.css';\r\nimport 'tachyons';\r\nimport Scroll from './Scroll';\r\nimport ErrorBoundry from './ErrorBoundry';\r\n\r\nimport SearchBox from './SearchBox';\r\n\r\n\r\n\r\nclass  App extends Component{\r\n\r\n    constructor(){\r\n\r\n        super()\r\n        this.state={\r\n       // robots:robots,in real app we don#t use like this we use as follows\r\n       robots:[],\r\n        searchField:''\r\n\r\n\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then(res=> res.json())\r\n        .then(users =>  this.setState({robots:users}));\r\n            \r\n       \r\n    }\r\n    onSearchChange=(event)=>{\r\n        this.setState({searchField:event.target.value})\r\n       \r\n    }\r\n    render(){\r\n        const filteredRobots=this.state.robots.filter(data=>{\r\n            return data.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n        })\r\n        // if fetching get delayed we can give a intimation to users like this\r\n\r\n        if(this.state.robots.length===0){\r\n            return<h1 className='tc'> Loading..........</h1>\r\n        }else{\r\n            return(\r\n                <div className='tc'>\r\n                          <h1 className='f1'>Robo Friends</h1>\r\n                          <SearchBox searchChange={this.onSearchChange}/>\r\n                          <Scroll>\r\n                              <ErrorBoundry>     \r\n                                 <CardList robots={filteredRobots}/>\r\n                            </ErrorBoundry>\r\n                         </Scroll>\r\n                 </div>\r\n              \r\n                  );\r\n\r\n        }\r\n\r\n      \r\n    }\r\n    \r\n}\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'tachyons';\nimport {robots} from'./robots';\nimport App from './App';\n\nReactDOM.render(\n  <App/>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}